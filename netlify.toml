[build]
  # Build command with proper dependency installation and forced clean install
  command = "npm ci --no-optional --prefer-offline && npm run build"
  
  # Directory to publish (Vite builds to 'dist' by default)
  publish = "dist"
  
  # Functions directory (if using Netlify Functions)
  functions = "netlify/functions"

[build.environment]
  # Node.js and NPM versions for consistent builds
  NODE_VERSION = "20"
  NPM_VERSION = "10"

# Redirects and rewrites
[[redirects]]
  # API proxy to GuardNomad backend
  from = "/api/*"
  to = "https://api.guardnomand.com/api/:splat"
  status = 200
  force = true

[[redirects]]
  # SPA fallback - redirect all routes to index.html for client-side routing
  from = "/*"
  to = "/index.html"
  status = 200

# Security headers
[[headers]]
  for = "/*"
  [headers.values]
    # Security headers
    X-Frame-Options = "DENY"
    X-XSS-Protection = "1; mode=block"
    X-Content-Type-Options = "nosniff"
    Referrer-Policy = "strict-origin-when-cross-origin"
    
    # Content Security Policy for GuardNomad travel app
    Content-Security-Policy = '''
      default-src 'self';
      script-src 'self' 'unsafe-inline' 'unsafe-eval' https://maps.googleapis.com;
      style-src 'self' 'unsafe-inline' https://fonts.googleapis.com;
      font-src 'self' https://fonts.gstatic.com;
      img-src 'self' data: https: blob:;
      connect-src 'self' https://api.guardnomand.com https://api.openweathermap.org https://newsapi.org https://*.supabase.co wss://*.supabase.co;
      frame-src 'self' https://maps.googleapis.com;
    '''

# Cache headers for static assets
[[headers]]
  for = "/assets/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.js"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.css"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

# Environment-specific settings
[context.production]
  command = "npm ci && npm run build"
  
[context.production.environment]
  NODE_ENV = "production"

[context.deploy-preview]
  command = "npm ci && npm run build"
  
[context.deploy-preview.environment]
  NODE_ENV = "production" 